<?xml version="1.0"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>com.vanguard</groupId>
	<artifactId>parent</artifactId>
	<version>3.0</version>
	<packaging>pom</packaging>
	<name>Vanguard Parent</name>

	<organization>
		<name>The Vanguard Group, Inc</name>
		<url>http://www.vanguard.com</url>
	</organization>

	<scm>
		<connection>scm:git:http://stash.vanguard.com:7990/scm/caa/vanguard-parent-pom.git</connection>
		<developerConnection>scm:git:http://stash.vanguard.com:7990/scm/caa/vanguard-parent-pom.git</developerConnection>
	</scm>

	<properties>
		<!-- leave the shadowVersion property unchanged. This is used during the 
			creation of shadow parent during milestone build -->
		<shadowVersion>shadowNone</shadowVersion>

		<!-- Plugin versions -->
		<assembly.plugin.version>2.6</assembly.plugin.version>
		<changelog.plugin.version>2.2</changelog.plugin.version>
		<clean.plugin.version>2.5</clean.plugin.version>
		<compiler.plugin.version>3.3</compiler.plugin.version>
		<dependency.plugin.version>2.10</dependency.plugin.version>
		<deploy.plugin.version>2.7</deploy.plugin.version>
		<ear.plugin.version>2.9</ear.plugin.version>
		<eclipse.plugin.version>2.9</eclipse.plugin.version>
		<ejb.plugin.version>2.3</ejb.plugin.version>
		<enforcer.plugin.version>1.2</enforcer.plugin.version>
		<help.plugin.version>2.2</help.plugin.version>
		<install.plugin.version>2.5.2</install.plugin.version>
		<jar.plugin.version>2.6</jar.plugin.version>
		<javadoc.plugin.version>2.8.1</javadoc.plugin.version>
		<plugin.plugin.version>3.2</plugin.plugin.version>
		<rar.plugin.version>2.4</rar.plugin.version>
		<release.plugin.version>2.5.2</release.plugin.version>
		<resources.plugin.version>2.7</resources.plugin.version>
		<scm.plugin.version>1.9.4</scm.plugin.version>
		<site.plugin.version>3.4</site.plugin.version>
		<source.plugin.version>2.4</source.plugin.version>
		<surefire.plugin.version>2.12</surefire.plugin.version>
		<surefire.report.plugin.version>2.12</surefire.report.plugin.version>
		<versions.plugin.version>1.3.1</versions.plugin.version>
		<war.plugin.version>2.6</war.plugin.version>
		<clirr.plugin.version>2.4</clirr.plugin.version>
		<jacoco.plugin.version>0.7.4.201502262128</jacoco.plugin.version>
		<properties.plugin.version>1.0-alpha-1</properties.plugin.version>
		<cbac.plugin.version>1.3-M20160509-01</cbac.plugin.version>
		<vgi.release.plugin.version>1.5-M20150714-02</vgi.release.plugin.version>
		<diff.co.plugin.version>3.0.1.ESAMAL-DIFCO-3</diff.co.plugin.version>
		<coverage.breaker.plugin.version>1.2-M20150714-01</coverage.breaker.plugin.version>
		<pom.analysis.plugin.version>1.5-M20150714-01</pom.analysis.plugin.version>
		<site.descriptor.remediation.plugin.version>1.5-M20150601-01</site.descriptor.remediation.plugin.version>
		<compression.plugin.version>1.5-M20160421-01</compression.plugin.version>
		<release.bootstrap.plugin.version>2.0-M20150605-01</release.bootstrap.plugin.version>
		<skip.enforcer.check.plugin.version>3.0.2.NGA-DONTSKIP-7</skip.enforcer.check.plugin.version>
		<pmd.failurePriority>1</pmd.failurePriority>
		<pmd.printFailingErrors>true</pmd.printFailingErrors>
		<pmd.failOnViolation>true</pmd.failOnViolation>
		
		<!-- Allow larger projects to use incremental mode -->
		<sonar.preview.readTimeout>5000</sonar.preview.readTimeout>

		<!-- Forces the Fortify plugin to look for projects in SSC using the artifactId 
			rather than artifactId and branch -->
		<sonar.fortify.projectName>${project.artifactId}</sonar.fortify.projectName>

		<!-- The pom-analysis-plugin Populates MATS Neo4j Database -->
		<pom.analysis.runPercentage>100</pom.analysis.runPercentage>
		<pom.analysis.uri>http://devtcs.vanguard.com:4080</pom.analysis.uri>

		<project.build.sourceEncoding>ISO-8859-1</project.build.sourceEncoding>

		<!-- Build properties -->
		<build.number>local</build.number>
		<build.serverType>local</build.serverType>
		<build.planKey>${USERNAME}</build.planKey>

		<!-- Variables to populate the manifest data -->
		<manifest-build-number>${build.number}</manifest-build-number>
		<manifest-build-url>undefined</manifest-build-url>
		<manifest-node-name>undefined</manifest-node-name>
		<manifest-scm-revision>undefined</manifest-scm-revision>
		<manifest-scm-url>undefined</manifest-scm-url>
		<manifest-deployment-type>${deployment.type}</manifest-deployment-type>
		<manifest-shadow-parent>shadowNone</manifest-shadow-parent>
		<manifest-build-id>undefined</manifest-build-id>
		<manifest-build-tag>undefined</manifest-build-tag>
		<manifest-created-by>${env.VAN_CREATED_BY}</manifest-created-by>
		<manifest-executor-number>undefined</manifest-executor-number>
		<manifest-sonar-quality-profile>${sonar.profile}</manifest-sonar-quality-profile>

		<!-- Use to skip dependency location checking by maven site -->
		<dependency.locations.enabled>false</dependency.locations.enabled>
		
		<!--  NGSA17464 shift left-->
		<unit.test.group>com.vanguard.test.categories.UnitTest</unit.test.group>
		<integration.test.group>com.vanguard.test.categories.IntegrationTest</integration.test.group>
		<end.to.end.test.group>com.vanguard.test.categories.EndToEndTest</end.to.end.test.group>
		<!-- should be removed once surefire.plugin.version is upgraded  -->
		<shiftleft.surefire.version>2.16</shiftleft.surefire.version>
		<!-- NGSA17700 Pitest mutation coverage threshold --> 
        <project.mutation.coverage.threshold>0</project.mutation.coverage.threshold>
	</properties>

	<issueManagement>
		<system>TeamTrack</system>
		<url>http://teamtrack.vanguard.com</url>
	</issueManagement>

	<distributionManagement>
		<site>
			<id>vanguard-maven-sites</id>
			<url>dav:http://prdmvnrepo.vanguard.com:19080/nexus/content/sites/vanguard-maven-sites/maven_sites/${project.groupId}/${project.artifactId}/${project.version}</url>
		</site>
		<snapshotRepository>
			<id>corp-snapshots</id>
			<name>Corporate Snapshot Repository</name>
			<url>http://prdmvnrepo.vanguard.com:19080/nexus/content/repositories/corp-snapshots</url>
		</snapshotRepository>
		<repository>
			<id>corp-releases</id>
			<name>Corporate Release Repository</name>
			<url>http://prdmvnrepo.vanguard.com:19080/nexus/content/repositories/corp-releases</url>
		</repository>
	</distributionManagement>

	<dependencies>
		<dependency>
            <groupId>com.vanguard.test</groupId>
            <artifactId>vanguard-test</artifactId>
            <version>1.0.0-M20150812-01</version>
        </dependency>
	</dependencies>
	
	<build>
		<extensions>
			<extension>
				<groupId>org.apache.maven.wagon</groupId>
				<artifactId>wagon-webdav-jackrabbit</artifactId>
				<version>2.2</version>
			</extension>
		</extensions>
		<pluginManagement>
			<plugins>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-assembly-plugin</artifactId>
					<version>${assembly.plugin.version}</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-clean-plugin</artifactId>
					<version>${clean.plugin.version}</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-compiler-plugin</artifactId>
					<version>${compiler.plugin.version}</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-dependency-plugin</artifactId>
					<version>${dependency.plugin.version}</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-deploy-plugin</artifactId>
					<version>${deploy.plugin.version}</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-ear-plugin</artifactId>
					<version>${ear.plugin.version}</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-ejb-plugin</artifactId>
					<version>${ejb.plugin.version}</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-install-plugin</artifactId>
					<version>${install.plugin.version}</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-jar-plugin</artifactId>
					<version>${jar.plugin.version}</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-javadoc-plugin</artifactId>
					<version>${javadoc.plugin.version}</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-plugin-plugin</artifactId>
					<version>${plugin.plugin.version}</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-rar-plugin</artifactId>
					<version>${rar.plugin.version}</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-release-plugin</artifactId>
					<version>${release.plugin.version}</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-resources-plugin</artifactId>
					<version>${resources.plugin.version}</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-site-plugin</artifactId>
					<version>${site.plugin.version}</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-source-plugin</artifactId>
					<version>${source.plugin.version}</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-surefire-plugin</artifactId>
					<version>${surefire.plugin.version}</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-war-plugin</artifactId>
					<version>${war.plugin.version}</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-eclipse-plugin</artifactId>
					<version>${eclipse.plugin.version}</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-help-plugin</artifactId>
					<version>${help.plugin.version}</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-scm-plugin</artifactId>
					<version>${scm.plugin.version}</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-enforcer-plugin</artifactId>
					<version>${enforcer.plugin.version}</version>
				</plugin>
				<plugin>
					<groupId>org.codehaus.mojo</groupId>
					<artifactId>versions-maven-plugin</artifactId>
					<version>${versions.plugin.version}</version>
				</plugin>
				<plugin>
					<groupId>org.codehaus.mojo</groupId>
					<artifactId>clirr-maven-plugin</artifactId>
					<version>${clirr.plugin.version}</version>
				</plugin>
				<plugin>
					<groupId>com.vanguard.maven.plugins</groupId>
					<artifactId>cbac-maven-plugin</artifactId>
					<version>${cbac.plugin.version}</version>
				</plugin>
				<plugin>
					<groupId>org.codehaus.mojo</groupId>
					<artifactId>properties-maven-plugin</artifactId>
					<version>${properties.plugin.version}</version>
				</plugin>
				<plugin>
					<groupId>com.vanguard.maven.plugins</groupId>
					<artifactId>vgi-release-maven-plugin</artifactId>
					<version>${vgi.release.plugin.version}</version>
				</plugin>
				<plugin>
					<groupId>org.jacoco</groupId>
					<artifactId>jacoco-maven-plugin</artifactId>
					<version>${jacoco.plugin.version}</version>
				</plugin>
				<plugin>
					<groupId>com.vanguard</groupId>
					<artifactId>diff-co-maven-plugin</artifactId>
					<version>${diff.co.plugin.version}</version>
				</plugin>
				<plugin>
					<groupId>com.vanguard</groupId>
					<artifactId>coverage-breaker-maven-plugin</artifactId>
					<version>${coverage.breaker.plugin.version}</version>
				</plugin>
				<!-- Generates extra modularity metrics for SonarQube -->
				<plugin>
					<groupId>com.vanguard.tip</groupId>
					<artifactId>pom-analysis-maven-plugin</artifactId>
					<version>${pom.analysis.plugin.version}</version>
				</plugin>
				<!-- Used to fix Maven Site bugs in the NGSA Build Step -->
				<plugin>
					<groupId>com.vanguard</groupId>
					<artifactId>site-descriptor-remediation-maven-plugin</artifactId>
					<version>${site.descriptor.remediation.plugin.version}</version>
				</plugin>
				<!-- This is used for cross-divisional content builds -->
				<plugin>
					<groupId>com.vanguard.inst.tools</groupId>
					<artifactId>compression-maven-plugin</artifactId>
					<version>${compression.plugin.version}</version>
				</plugin>
				<plugin>
					<groupId>com.vanguard</groupId>
					<artifactId>release-bootstrap-maven-plugin</artifactId>
					<version>${release.bootstrap.plugin.version}</version>
				</plugin>
				<plugin>
					<groupId>com.vanguard</groupId>
					<artifactId>skip-enforcer-check-maven-plugin</artifactId>
					<version>${skip.enforcer.check.plugin.version}</version>
				</plugin>
				<plugin>
					<groupId>org.eclipse.m2e</groupId>
					<artifactId>lifecycle-mapping</artifactId>
					<version>1.0.0</version>
					<configuration>
						<lifecycleMappingMetadata>
							<pluginExecutions>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>com.vanguard</groupId>
										<artifactId>
											selenium-server-injector
										</artifactId>
										<versionRange>
											[1.0.2.0,)
										</versionRange>
										<goals>
											<goal>selenium</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore></ignore>
									</action>
								</pluginExecution>
							</pluginExecutions>
						</lifecycleMappingMetadata>
					</configuration>
				</plugin>
			</plugins>
		</pluginManagement>
		<plugins>
			<!-- enforce Java 6 compliance in code -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<configuration>
					<source>1.6</source>
					<target>1.6</target>
					<debug>true</debug>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-eclipse-plugin</artifactId>
				<configuration>
					<!-- Needed in 2.6 and 2.7 to prevent the exclusion of AspectJ libraries, 
						see MECLIPSE-594 -->
					<ajdtVersion>none</ajdtVersion>

					<!-- groupId and version removed from project names in Vanguard Parent 
						1.5.1 to support multimodule projects on Hudson -->
					<!-- projectNameTemplate defaults to groupId.artifactId-version, must 
						define if groupId and/or version not in project name -->
					<addGroupIdToProjectName>false</addGroupIdToProjectName>
					<addVersionToProjectName>false</addVersionToProjectName>
					<projectNameTemplate>[artifactId]</projectNameTemplate>

					<additionalProjectnatures>
						<projectnature>org.springframework.ide.eclipse.core.springnature</projectnature>
					</additionalProjectnatures>
					<additionalBuildcommands>
						<buildcommand>org.springframework.ide.eclipse.core.springbuilder</buildcommand>
					</additionalBuildcommands>
					<downloadSources>true</downloadSources>
					<downloadJavadocs>true</downloadJavadocs>

					<additionalConfig>
						<file>
							<name>.settings/org.eclipse.jdt.ui.prefs</name>
							<location>/settings/org.eclipse.jdt.ui.prefs</location>
						</file>
						<file>
							<name>.settings/org.eclipse.jdt.core.prefs</name>
							<location>/settings/org.eclipse.jdt.core.prefs</location>
						</file>
					</additionalConfig>
				</configuration>
				<dependencies>
					<!-- The above Eclipse preferences files are stored in this dependency -->
					<dependency>
						<groupId>com.vanguard</groupId>
						<artifactId>eclipse-config</artifactId>
						<version>1.2</version>
					</dependency>
				</dependencies>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jar-plugin</artifactId>
				<configuration>
					<archive>
						<manifestEntries>
							<Deployment-Type>${manifest-deployment-type}</Deployment-Type>
							<shadowParent>${manifest-shadow-parent}</shadowParent>
							<Van-Build-ID>${manifest-build-id}</Van-Build-ID>
							<Van-Build-Number>${manifest-build-number}</Van-Build-Number>
							<Van-Build-Tag>${manifest-build-tag}</Van-Build-Tag>
							<Van-Build-URL>${manifest-build-url}</Van-Build-URL>
							<Van-Created-By>${manifest-created-by}</Van-Created-By>
							<Van-Executor-Number>${manifest-executor-number}</Van-Executor-Number>
							<Van-Node-Name>${manifest-node-name}</Van-Node-Name>
							<Van-SCM-Revision>${manifest-scm-revision}</Van-SCM-Revision>
							<Van-SonarQube-Quality-Profile>${manifest-sonar-quality-profile}</Van-SonarQube-Quality-Profile>
							<Van-SVN-URL>${manifest-scm-url}</Van-SVN-URL>
						</manifestEntries>
					</archive>
				</configuration>
				<!-- ensure test classes jar is created with the compiled artifacts -->
				<executions>
					<execution>
						<goals>
							<goal>test-jar</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-war-plugin</artifactId>
				<configuration>
					<archive>
						<manifestEntries>
							<Deployment-Type>${manifest-deployment-type}</Deployment-Type>
							<shadowParent>${manifest-shadow-parent}</shadowParent>
							<Van-Build-ID>${manifest-build-id}</Van-Build-ID>
							<Van-Build-Number>${manifest-build-number}</Van-Build-Number>
							<Van-Build-Tag>${manifest-build-tag}</Van-Build-Tag>
							<Van-Build-URL>${manifest-build-url}</Van-Build-URL>
							<Van-Created-By>${manifest-created-by}</Van-Created-By>
							<Van-Executor-Number>${manifest-executor-number}</Van-Executor-Number>
							<Van-Node-Name>${manifest-node-name}</Van-Node-Name>
							<Van-SCM-Revision>${manifest-scm-revision}</Van-SCM-Revision>
							<Van-SonarQube-Quality-Profile>${manifest-sonar-quality-profile}</Van-SonarQube-Quality-Profile>
							<Van-SVN-URL>${manifest-scm-url}</Van-SVN-URL>
						</manifestEntries>
					</archive>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-ear-plugin</artifactId>
				<configuration>
					<archive>
						<manifestEntries>
							<Deployment-Type>${manifest-deployment-type}</Deployment-Type>
							<shadowParent>${manifest-shadow-parent}</shadowParent>
							<Van-Build-ID>${manifest-build-id}</Van-Build-ID>
							<Van-Build-Number>${manifest-build-number}</Van-Build-Number>
							<Van-Build-Tag>${manifest-build-tag}</Van-Build-Tag>
							<Van-Build-URL>${manifest-build-url}</Van-Build-URL>
							<Van-Created-By>${manifest-created-by}</Van-Created-By>
							<Van-Executor-Number>${manifest-executor-number}</Van-Executor-Number>
							<Van-Node-Name>${manifest-node-name}</Van-Node-Name>
							<Van-SCM-Revision>${manifest-scm-revision}</Van-SCM-Revision>
							<Van-SonarQube-Quality-Profile>${manifest-sonar-quality-profile}</Van-SonarQube-Quality-Profile>
							<Van-SVN-URL>${manifest-scm-url}</Van-SVN-URL>
						</manifestEntries>
					</archive>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-source-plugin</artifactId>
				<!-- ensure source jar and test source jar are created with the compiled 
					artifacts -->
				<executions>
					<execution>
						<goals>
							<goal>jar</goal>
							<goal>test-jar</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-resources-plugin</artifactId>
				<dependencies>
					<dependency>
						<groupId>org.apache.maven.shared</groupId>
						<artifactId>maven-filtering</artifactId>
						<version>1.3</version>
					</dependency>
				</dependencies>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-enforcer-plugin</artifactId>
				<dependencies>
					<dependency>
						<groupId>com.vanguard</groupId>
						<artifactId>enforcer-rules</artifactId>
						<version>2.0-M20160112-01</version>
					</dependency>
				</dependencies>
				<executions>
					<execution>
						<id>enforce-java</id>
						<goals>
							<goal>enforce</goal>
						</goals>
						<configuration>
							<rules>
								<requireJavaVersion>
									<message>Only Java version &gt;= 1.6 allowed</message>
									<version>[1.6,)</version>
								</requireJavaVersion>
								<requireMavenVersion>
									<message>Only Maven versions &gt;= 3.0.4 allowed</message>
									<version>[3.0.4,)</version>
								</requireMavenVersion>
								<requirePluginVersions>
									<message>Plugin versions must be set, Using LATEST, RELEASE,
										SNAPSHOT or a timestamp as version will not be allowed</message>
									<!-- Default true, set to false due to DeclarePluginVersionsRule 
										(Enforcer rule) -->
									<banLatest>false</banLatest>
									<!-- Default true, set to false due to DeclarePluginVersionsRule 
										(Enforcer rule) -->
									<banRelease>false</banRelease>
									<!-- Default true -->
									<banSnapshots>true</banSnapshots>
									<banTimestamps>true</banTimestamps>
									<!-- Default clean,deploy,site -->
									<phases>clean,deploy,site</phases>
									<additionalPlugins>
										<additionalPlugin>org.apache.maven.plugins:maven-eclipse-plugin</additionalPlugin>
									</additionalPlugins>
								</requirePluginVersions>
							</rules>
							<fail>false</fail>
						</configuration>
					</execution>
					<execution>
						<id>enforce-warnings-before-errors</id>
						<goals>
							<goal>enforce</goal>
						</goals>
						<configuration>
							<rules>
								<migratedDependencyCoordinatesRule
									implementation="com.vanguard.enforcer.gav.MigratedDependencyCoordinatesRule" />
							</rules>
							<fail>false</fail>
						</configuration>
					</execution>
					<execution>
						<id>enforce-custom-errors</id>
						<goals>
							<goal>enforce</goal>
						</goals>
						<configuration>
							<rules>
								<requireSCMTagRule
									implementation="com.vanguard.enforcer.environment.RequireSCMTagRule" />
								<declareValidVersionRule
									implementation="com.vanguard.enforcer.gav.DeclareValidVersionRule" />
								<preventDependencyVersionKeywordsRule
									implementation="com.vanguard.enforcer.gav.PreventDependencyVersionKeywordsRule" />
								<correlatePackagingAndArtifactIdSuffixRule
									implementation="com.vanguard.enforcer.gav.CorrelatePackagingAndArtifactIdSuffixRule" />
								<declarePluginVersionsRule
									implementation="com.vanguard.enforcer.build.DeclarePluginVersionsRule" />
								<allowableDependenciesRule
									implementation="com.vanguard.enforcer.build.AllowableDependenciesRule" />
								<allowablePluginsRule
									implementation="com.vanguard.enforcer.build.AllowablePluginsRule" />
							</rules>
							<fail>true</fail>
						</configuration>
					</execution>
					<execution>
						<id>enforce-custom-warnings</id>
						<goals>
							<goal>enforce</goal>
						</goals>
						<configuration>
							<rules>
								<useMinimumDependencyVersionRule
									implementation="com.vanguard.enforcer.gav.UseMinimumDependencyVersionRule" />
								<providePointOfContactRule
									implementation="com.vanguard.enforcer.information.ProvidePointOfContactRule">
									<requireDeveloper>false</requireDeveloper>
									<requireMailingList>false</requireMailingList>
								</providePointOfContactRule>
								<provideProjectDescriptionRule
									implementation="com.vanguard.enforcer.information.ProvideProjectDescriptionRule" />
							</rules>
							<fail>false</fail>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<!-- Used to support testing against Selenium Grid -->
			<plugin>
				<groupId>com.vanguard</groupId>
				<artifactId>selenium-server-injector</artifactId>
				<version>1.0.2.0</version>
				<configuration>
					<seleniumGridServer>http://cvlna045.vanguard.com:4444/wd/hub</seleniumGridServer>
				</configuration>
				<executions>
					<execution>
						<id>inject</id>
						<phase>initialize</phase>
						<goals>
							<goal>selenium</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>versions-maven-plugin</artifactId>
			</plugin>
			<plugin>
				<groupId>com.vanguard.maven.plugins</groupId>
				<artifactId>cbac-maven-plugin</artifactId>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-site-plugin</artifactId>
				<configuration>
					<reportPlugins>
						<plugin>
							<groupId>org.apache.maven.plugins</groupId>
							<artifactId>maven-project-info-reports-plugin</artifactId>
							<version>2.7</version>
							<reportSets>
								<reportSet>
									<reports>
										<report>summary</report>
										<report>index</report>
										<report>dependencies</report>
										<report>dependency-convergence</report>
										<report>dependency-management</report>
										<report>plugin-management</report>
										<report>project-team</report>
										<report>mailing-list</report>
										<report>cim</report>
										<report>issue-tracking</report>
										<report>scm</report>
									</reports>
								</reportSet>
							</reportSets>
						</plugin>
						<plugin>
							<groupId>org.apache.maven.plugins</groupId>
							<artifactId>maven-jxr-plugin</artifactId>
							<version>2.1</version>
							<configuration>
								<inputEncoding>${project.build.sourceEncoding}</inputEncoding>
								<linkJavadoc>true</linkJavadoc>
							</configuration>
						</plugin>
						<plugin>
							<groupId>org.apache.maven.plugins</groupId>
							<artifactId>maven-changelog-plugin</artifactId>
							<version>${changelog.plugin.version}</version>
							<reportSets>
								<reportSet>
									<id>dual-report</id>
									<reports>
										<report>changelog</report>
										<report>file-activity</report>
									</reports>
								</reportSet>
							</reportSets>
						</plugin>
						<plugin>
							<groupId>org.apache.maven.plugins</groupId>
							<artifactId>maven-doap-plugin</artifactId>
							<version>1.0</version>
						</plugin>
						<plugin>
							<groupId>org.apache.maven.plugins</groupId>
							<artifactId>maven-javadoc-plugin</artifactId>
							<version>${javadoc.plugin.version}</version>
							<configuration>
								<javadocVersion>1.5</javadocVersion>
							</configuration>
						</plugin>
						<plugin>
							<groupId>org.apache.maven.plugins</groupId>
							<artifactId>maven-surefire-report-plugin</artifactId>
							<version>${surefire.report.plugin.version}</version>
						</plugin>
						<plugin>
							<groupId>org.codehaus.mojo</groupId>
							<artifactId>versions-maven-plugin</artifactId>
							<version>${versions.plugin.version}</version>
							<reportSets>
								<reportSet>
									<reports>
										<report>dependency-updates-report</report>
										<report>plugin-updates-report</report>
										<report>property-updates-report</report>
									</reports>
								</reportSet>
							</reportSets>
						</plugin>
						<plugin>
							<groupId>com.vanguard.maven.plugins</groupId>
							<artifactId>cbac-maven-plugin</artifactId>
							<version>${cbac.plugin.version}</version>
						</plugin>
						<plugin>
							<groupId>com.vanguard.maven.plugins</groupId>
							<artifactId>maven-external-rpt-plugin</artifactId>
							<reportSets>
								<reportSet>
									<configuration />
									<reports>
										<report>differential-coverage</report>
										<report>sonar-issues</report>
									</reports>
								</reportSet>
							</reportSets>
						</plugin>
						<plugin>
							<groupId>org.apache.maven.plugins</groupId>
							<artifactId>maven-changes-plugin</artifactId>
							<version>2.4</version>
							<reportSets>
								<reportSet>
									<reports>
										<report>changes-report</report>
									</reports>
								</reportSet>
							</reportSets>
						</plugin>
					</reportPlugins>
				</configuration>
				<executions>
					<execution>
						<id>attach-descriptor</id>
						<goals>
							<goal>attach-descriptor</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.jacoco</groupId>
				<artifactId>jacoco-maven-plugin</artifactId>
				<configuration>
					<excludes>
						<exclude>org.drools.*</exclude>
					</excludes>
				</configuration>
			</plugin>
		</plugins>
	</build>
	<profiles>
		<profile>
			<id>custom-changelog-report</id>
			<activation>
				<property>
					<name>changelogStartDate</name>
				</property>
			</activation>
			<reporting>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-changelog-plugin</artifactId>
						<version>${changelog.plugin.version}</version>
						<configuration>
							<type>date</type>
							<dates>
								<date implementation="java.lang.String">${changelogStartDate}</date>
								<date implementation="java.lang.String">${changelogEndDate}</date>
							</dates>
							<dateFormat>yyyy-MM-dd</dateFormat>
						</configuration>
					</plugin>
				</plugins>
			</reporting>
		</profile>
		<!-- Add configuration to deploy jared build directory using assembly plugin -->
		<profile>
			<id>store-build-config</id>
			<activation>
				<file>
					<exists>build</exists>
				</file>
			</activation>
			<build>
				<plugins>
					<plugin>
						<artifactId>maven-assembly-plugin</artifactId>
						<executions>
							<execution>
								<phase>package</phase>
								<configuration>
									<descriptors>
										<descriptor>src/main/assembly/build-config.xml</descriptor>
									</descriptors>
									<finalName>${project.artifactId}-${project.version}</finalName>
									<outputDirectory>${project.build.directory}</outputDirectory>
									<appendAssemblyId>true</appendAssemblyId>
									<attach>true</attach>
									<ignoreMissingDescriptor>true</ignoreMissingDescriptor>
								</configuration>
								<goals>
									<goal>single</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<id>sanity-check</id>
			<build>
				<plugins>
					<!-- Bad Things (tm) happen when this is removed. -->
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-dependency-plugin</artifactId>
						<executions>
							<execution>
								<id>copy-dependencies</id>
								<phase>compile</phase>
								<goals>
									<goal>build-classpath</goal>
								</goals>
								<configuration>
									<outputFile>${project.build.outputDirectory}/dependencyClasspath.txt</outputFile>
								</configuration>
							</execution>
						</executions>
					</plugin>
					<plugin>
						<groupId>org.jacoco</groupId>
						<artifactId>jacoco-maven-plugin</artifactId>
						<executions>
							<execution>
								<id>hai2u</id>
								<phase>process-test-classes</phase>
								<goals>
									<goal>prepare-agent</goal>
								</goals>
								<configuration>
									<propertyName>jacocoJavaAgent</propertyName>
								</configuration>
							</execution>
							<execution>
								<id>bye2u</id>
								<phase>post-integration-test</phase>
								<goals>
									<goal>report</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
					<plugin>
						<groupId>com.vanguard</groupId>
						<artifactId>diff-co-maven-plugin</artifactId>
						<executions>
							<execution>
								<phase>post-integration-test</phase>
								<goals>
									<goal>ci</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
					<plugin>
						<groupId>com.vanguard</groupId>
						<artifactId>coverage-breaker-maven-plugin</artifactId>
						<executions>
							<execution>
								<phase>verify</phase>
								<goals>
									<goal>break</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
					<plugin>
						<groupId>com.vanguard.tip</groupId>
						<artifactId>pom-analysis-maven-plugin</artifactId>
						<executions>
							<execution>
								<phase>verify</phase>
								<goals>
									<goal>update-pom-db</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<id>java-32-bit</id>
			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-surefire-plugin</artifactId>
						<configuration>
							<argLine>${jacocoJavaAgent} -Xms512m -Xmx1024m -XX:PermSize=256m
								-XX:MaxPermSize=1024m</argLine>
						</configuration>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<id>java-64-bit</id>
			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-surefire-plugin</artifactId>
						<configuration>
							<argLine>${jacocoJavaAgent} -Xms512m -Xmx3072m -XX:PermSize=256m
								-XX:MaxPermSize=1024m</argLine>
						</configuration>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<id>sonarqube</id>
			<properties>
				<!-- Currently the XML and Web plugins both try to analyze xml files -->
				<sonar.lang.patterns.xml>**/*.xml</sonar.lang.patterns.xml>
				<!-- Instructs SQ to search for all files in src/main -->
				<sonar.sources>src/main</sonar.sources>
			</properties>
		</profile>
		<!-- This profile isn't normally actived in the NGSA Build Step, but you 
			can activate it manually if you want to view extra SonarQube debug info without 
			using Maven's very chatty -X option. -->
		<profile>
			<id>sonarqube-verbose</id>
			<properties>
				<sonar.verbose>true</sonar.verbose>
			</properties>
		</profile>
		<profile>
			<id>ci-deploy</id>
			<properties>
				<enforcer.skip>true</enforcer.skip>
				<skipTests>true</skipTests>
			</properties>
		</profile>
		<profile>
			<id>milestone-deploy</id>
			<build>
				<plugins>
					<plugin>
						<groupId>com.vanguard.maven.plugins</groupId>
						<!-- <artifactId>maven-vgi-release-plugin</artifactId> -->
						<artifactId>vgi-release-maven-plugin</artifactId>
						<configuration>
							<arguments>-Denforcer.skip=true -DskipTests=true</arguments>
							<checkModificationExcludes>
								<checkModificationExclude>ProjectReport.csv</checkModificationExclude>
								<checkModificationExclude>**/ProjectReport.csv</checkModificationExclude>
							</checkModificationExcludes>
							<!-- Do not run Maven Site as part of the milestone plugin -->
							<goals>deploy</goals>
						</configuration>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<id>milestone-release-deploy</id>
			<build>
				<plugins>
					<plugin>
						<groupId>com.vanguard</groupId>
						<artifactId>release-bootstrap-maven-plugin</artifactId>
					</plugin>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-release-plugin</artifactId>
						<configuration>
							<arguments>-Denforcer.skip=true -DskipTests=true</arguments>
							<releaseVersion>${release.version}</releaseVersion>
							<developmentVersion>${project.version}</developmentVersion>
							<tag>${release.version}</tag>
							<checkModificationExcludes>
								<checkModificationExclude>ProjectReport.csv</checkModificationExclude>
								<checkModificationExclude>**/ProjectReport.csv</checkModificationExclude>
							</checkModificationExcludes>
							<!-- Do not run Maven Site as part of the milestone plugin -->
							<goals>deploy</goals>
						</configuration>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<id>maven-site</id>
			<properties>
				<enforcer.skip>true</enforcer.skip>
				<skipTests>true</skipTests>
			</properties>
			<build>
				<plugins>
					<plugin>
						<groupId>com.vanguard</groupId>
						<artifactId>site-descriptor-remediation-maven-plugin</artifactId>
						<executions>
							<execution>
								<phase>pre-site</phase>
								<goals>
									<goal>remediate</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<id>bamboo</id>
			<activation>
				<property>
					<name>env.bamboo_buildNumber</name>
				</property>
			</activation>
			<properties>
				<build.number>${env.bamboo_buildNumber}</build.number>
				<build.branch>${env.bamboo_planRepository_branchName}</build.branch>
				<build.serverType>bamboo</build.serverType>
				<build.planKey>${env.bamboo_planKey}</build.planKey>
				<manifest-build-url>${env.bamboo_resultsUrl}</manifest-build-url>
				<manifest-node-name>${env.bamboo_agentId}</manifest-node-name>
				<manifest-scm-revision>${env.bamboo_planRepository_revision}</manifest-scm-revision>
				<manifest-scm-url>${env.bamboo_planRepository_repositoryUrl}</manifest-scm-url>
				<manifest-build-id>${env.bamboo_buildTimeStamp}</manifest-build-id>
				<manifest-executor-number>bamboo-build</manifest-executor-number>
				<manifest-build-tag>${env.bamboo_buildPlanName}</manifest-build-tag>
				<manifest.planKey>${env.bamboo_planKey}</manifest.planKey>
			</properties>
		</profile>
		<profile>
			<id>jenkins</id>
			<activation>
				<property>
					<name>env.BUILD_NUMBER</name>
				</property>
			</activation>
			<properties>
				<build.number>${env.BUILD_NUMBER}</build.number>
				<build.serverType>jenkins</build.serverType>
				<manifest-build-url>${env.BUILD_URL}</manifest-build-url>
				<manifest-node-name>${env.NODE_NAME}</manifest-node-name>
				<manifest-scm-revision>${env.SVN_REVISION}</manifest-scm-revision>
				<manifest-scm-url>${env.SVN_URL}</manifest-scm-url>
				<manifest-build-id>${env.BUILD_ID}</manifest-build-id>
				<manifest-executor-number>${env.EXECUTOR_NUMBER}</manifest-executor-number>
				<manifest-build-tag>${env.BUILD_TAG}</manifest-build-tag>
			</properties>
		</profile>
		<profile>
			<id>service-registry</id>
			<activation>
				<!-- Only run on java 6 or higher -->
				<jdk>[1.6,)</jdk>
			</activation>
			<build>
				<plugins>
					<plugin>
						<groupId>com.vanguard</groupId>
						<artifactId>service-registry-maven-plugin</artifactId>
						<version>1.1.3.NGA-CTOSRMP-9</version>
						<executions>
							<execution>
								<id>generate</id>
								<goals>
									<goal>generate</goal>
								</goals>
							</execution>
							<execution>
								<id>register</id>
								<goals>
									<goal>register</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<id>nexusiq</id>
			<activation>
			<property>
			<name>build.serverType</name>
			<value>!local</value>
			</property>
			</activation>
              <build>
				<plugins>
					<plugin>
  						<groupId>com.vanguard.ngsa</groupId>
  						<artifactId>staging-nexusiq-plugin-prd</artifactId>
  						<version>3.3-M20160212-01</version>
						<executions>
							<execution>
							<phase>install</phase>
								<goals>
									<goal>evaluate</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
					<plugin>
						<groupId>com.sonatype.clm</groupId>
						<artifactId>clm-maven-plugin</artifactId>
						<version>2.4.0</version>
						<executions>
							<execution>
							  <phase>install</phase>
								<goals>
									<goal>evaluate</goal>
								</goals>
							</execution>
						</executions>
						<configuration>
							<serverUrl>http://prdclmserver:19180</serverUrl>
							<applicationId>${nexus-lifecycle-app-name}</applicationId>
							<skip>${nexusiq-skip-scan}</skip>
							<stage>release</stage>
						</configuration>
					</plugin>
				</plugins>
			</build>
     </profile>
     <profile>
 <id>unit-int-ig-man-tests</id>
 <build>
  <plugins>
   <plugin>
    <groupId>org.apache.maven.plugins</groupId>
    <artifactId>maven-surefire-plugin</artifactId>
    <version>${shiftleft.surefire.version}</version>
    <executions>
     <execution>
      <id>default-test</id>
      <goals>
       <goal>test</goal>
      </goals>
      <configuration>
       <reportNameSuffix>unit</reportNameSuffix>
       <argLine>${jacocoJavaAgent} -Xms512m -Xmx3072m
        -XX:MaxPermSize=1024m</argLine>
       <includes>
        <include>%regex[(((?!cucumber).)*Test.class)]</include>
        <include>%regex[(((?!cucumber).)*TestCase.class)]</include>
        <include>%regex[(((?!cucumber).)*.Test.*.class)]</include>
        <include>**/cucumber/Run*UnitCukeTest.class</include>
        <include>**/cucumber/runners/unit/*CukeTest.class</include>
       </includes>
       <excludedGroups>${integration.test.group},
        ${end.to.end.test.group}</excludedGroups>
      </configuration>
     </execution>
     <execution>
      <id>integration-tests</id>
      <goals>
       <goal>test</goal>
      </goals>
      <configuration>
       <reportNameSuffix>integration</reportNameSuffix>
       <argLine>${jacocoJavaAgent} -Xms512m -Xmx3072m
        -XX:MaxPermSize=1024m</argLine>
       <includes>
        <!-- <include>%regex[(((?!cucumber).)*Test.class)|.*IntegrationCukeTest.class]</include> -->
        <include>%regex[(((?!cucumber).)*Test.class)]</include>
        <include>%regex[(((?!cucumber).)*TestCase.class)]</include>
        <include>%regex[(((?!cucumber).)*.Test.*.class)]</include>
        <include>**/cucumber/Run*IntegrationCukeTest.class</include>
        <include>**/cucumber/runners/integration/*CukeTest.class</include>
       </includes>
       <groups>${integration.test.group}</groups>
      </configuration>
     </execution>
     <execution>
      <id>ignore-tests</id>
      <goals>
       <goal>test</goal>
      </goals>
      <configuration>
       <threadCount>1</threadCount>
       <reportNameSuffix>ignore</reportNameSuffix>
       <argLine>${jacocoJavaAgent} -Xms512m -Xmx3072m
        -XX:MaxPermSize=1024m</argLine>
       <includes>
        <include>%regex[(((?!cucumber).)*Test.class)|.*RunIgnoreCukeTest.class]</include>
       </includes>
       <groups>${unit.test.group}</groups>
       <excludedGroups>${unit.test.group}</excludedGroups>
      </configuration>
     </execution>
    						 <execution>
                                <id>manual-tests</id>
                                <goals>
                                    <goal>test</goal>
                                </goals>
                                <configuration>
                                   
                                    <argLine>${jacocoJavaAgent} -Xms512m -Xmx3072m -XX:MaxPermSize=256m</argLine>
                                    <includes>
                                         <include>**/cucumber/RunRegressionCukeTest.class</include>
                                         <include>**/cucumber/runners/manual/*CukeTest.class</include>
                                    </includes>
                                </configuration>
                            </execution>
    </executions>
   </plugin>
   <plugin>
    <groupId>org.jacoco</groupId>
    <artifactId>jacoco-maven-plugin</artifactId>
    <version>${jacoco.plugin.version}</version>
    <executions>
     <execution>
      <id>prepare-agent</id>
      <phase>process-test-classes</phase>
      <goals>
       <goal>prepare-agent</goal>
      </goals>
      <configuration>
       <propertyName>jacocoJavaAgent</propertyName>
      </configuration>
     </execution>
    </executions>
   </plugin>
  </plugins>
 </build>
  </profile>
       <profile>
            <id>int-e2e-ig-tests</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-surefire-plugin</artifactId>
                        <version>${shiftleft.surefire.version}</version>
                        <configuration>
                            <testFailureIgnore>true</testFailureIgnore>
                        </configuration>
                        <executions>
                            <execution>
                                <id>integration-tests</id>
                                <goals>
                                    <goal>test</goal>
                                </goals>
                                <configuration>
                                    <reportNameSuffix>integration</reportNameSuffix>
                                    <argLine>-Xms512m -Xmx3072m -XX:MaxPermSize=256m</argLine>
                                    <includes>
                                        <include>%regex[(((?!cucumber).)*Test.class)]</include>
                                        <include>%regex[(((?!cucumber).)*TestCase.class)]</include>
                                        <include>%regex[(((?!cucumber).)*.Test.*.class)]</include>
                                        <include>**/cucumber/Run*IntegrationCukeTest.class</include>
                                        <include>**/cucumber/runners/integration/*CukeTest.class</include>
                                    </includes>
                                    <groups>${integration.test.group}</groups>
                                </configuration>
                            </execution>
                            <execution>
                                <id>default-test</id>
                                <goals>
                                    <goal>test</goal>
                                </goals>
                                <configuration>
                                    <reportNameSuffix>endtoend</reportNameSuffix>
                                    <argLine> -Xms512m -Xmx3072m -XX:MaxPermSize=256m</argLine>
                                    <includes>
                                        <include>%regex[(((?!cucumber).)*Test.class)]</include>
                                        <include>%regex[(((?!cucumber).)*TestCase.class)]</include>
                                        <include>%regex[(((?!cucumber).)*.Test.*.class)]</include>
                                        <include>**/cucumber/Run*EndToEndCukeTest.class</include>
                                        <include>**/cucumber/runners/endtoend/*CukeTest.class</include>
                                    </includes>
                                    <excludedGroups>${integration.test.group},
                                        ${unit.test.group}</excludedGroups>
                                </configuration>
                            </execution>
                            <execution>
                                <id>ignore-tests</id>
                                <goals>
                                    <goal>test</goal>
                                </goals>
                                <configuration>
                                    <dependenciesToScan>
                                        <dependency>com.vanguard:cucumber-inner-source</dependency>
                                    </dependenciesToScan>
                                    <threadCount>1</threadCount>
                                    <reportNameSuffix>ignore</reportNameSuffix>
                                    <argLine> -Xms512m -Xmx3072m -XX:MaxPermSize=256m</argLine>
                                   <includes>
                                        <include>com/vanguard/RunIgnoreCukeTest.class</include>
                                    </includes>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
             <id>mutationAnalysis</id>
             <activation>
                 <activeByDefault>false</activeByDefault>
                 <file>
                    <exists>${basedir}/src/test/resources/META-INF/mutation/pitestHistory.txt</exists>
                 </file>
                 <property>
                    <name>environment</name>
                    <value>jenkins</value>
                </property>
             </activation>
             <build>
                <plugins>
                <!-- Plugin for Mutation Testing, Maven Integration test need to pass locally first. -->
                <plugin>
                    <groupId>org.pitest</groupId>
                    <artifactId>pitest-maven</artifactId>
                    <version>1.1.1</version>
                    <executions>
                      <execution>
                        <id>mutation-coverage</id>
                        <goals>
                          <goal>mutationCoverage</goal>
                        </goals>
                        <configuration>
                        <skip>${skipTests}</skip> 
                        <mutationThreshold>${project.mutation.coverage.threshold}</mutationThreshold>
                          <verbose>true</verbose>
                          <jvmArgs>
                            <value>-Xms512m</value>
                            <value>-Xmx4096m</value>
                            <value>-XX:PermSize=512m</value>
                            <value>-XX:MaxPermSize=4096m</value>
                          </jvmArgs>
                          <targetClasses>
                            <param>com.vanguard.*</param>
                          </targetClasses>
                          <targetTests>
                            <param>com.vanguard.*</param>
                          </targetTests>
                          <outputFormats>
                            <outputFormat>HTML</outputFormat>
                          </outputFormats>
                            <historyInputFile>${basedir}/src/test/resources/META-INF/mutation/pitestHistory.txt</historyInputFile>                           
                            <historyOutputFile>${basedir}/src/test/resources/META-INF/mutation/pitestHistory.txt</historyOutputFile>                  
                        </configuration>
                      </execution>
                    </executions>
                    <dependencies>
                        <dependency>
                            <groupId>com.github.alexvictoor</groupId>
                            <artifactId>pitest-cucumber-plugin</artifactId>
                            <version>0.3</version>
                        </dependency>
                        <dependency>
                            <groupId>org.pitest</groupId>
                            <artifactId>pitest</artifactId>
                            <version>1.1.4</version>
                        </dependency>
                    </dependencies>
                  </plugin>
                   
                </plugins>
             </build>
         </profile>
          <profile>
             <id>mutationCheckin</id>
             <activation>
                 <activeByDefault>false</activeByDefault>
                 <file>
                    <exists>${basedir}/src/test/resources/META-INF/mutation/pitestHistory.txt</exists>
                 </file>
                 <property>
                    <name>environment</name>
                    <value>jenkins</value>
                </property>
             </activation>
             <build>
                <plugins>
        
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-scm-plugin</artifactId>
                        <version>1.8.1</version>
                        <configuration>
                          <username>${SVN_USERNAME}</username>
                          <password>${SVN_PASSWORD}</password>
                          <skipExportIfExists>
                         
                          </skipExportIfExists>
                        </configuration>
                        <executions>
                          <execution>
                            <id>svn_commit</id>
                            <phase>verify</phase>
                            <goals>
                              <!-- <goal>add</goal> -->
                              <goal>checkin</goal>
                            </goals>
                            <configuration>
                            <skip>${skipTests}</skip> 
                              <message>Automatically committing pitestHistory.txt for Pitest changes</message>
                              <includes>pitestHistory.txt</includes>
                              <basedir>${basedir}/src/test/resources/META-INF/mutation</basedir>
                            </configuration>
                          </execution>
                        </executions>
                    </plugin>
               </plugins>
            </build>
        </profile>
        <profile>
            <id>parallel-int-e2e-ig-tests</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-surefire-plugin</artifactId>
                        <version>${shiftleft.surefire.version}</version>
                        <configuration>
                            <testFailureIgnore>true</testFailureIgnore>
                        </configuration>
                        <executions>
                            <execution>
                                <id>integration-tests</id>
                                <goals>
                                    <goal>test</goal>
                                </goals>
                                <configuration>
                                    <reportNameSuffix>integration</reportNameSuffix>
                                    <argLine>-Xms512m -Xmx3072m -XX:MaxPermSize=256m -XX:-UseSplitVerifier</argLine>
                                    <includes>
                                        <include>%regex[(((?!cucumber).)*Test.class)]</include>
                                        <include>%regex[(((?!cucumber).)*TestCase.class)]</include>
                                        <include>%regex[(((?!cucumber).)*.Test.*.class)]</include>
                                        <include>**/cucumber/Run*IntegrationCukeTest.class</include>
                                        <include>**/cucumber/runners/integration/*CukeTest.class</include>
                                    </includes>
                                    <groups>${integration.test.group}</groups>
                                </configuration>
                            </execution>
                            <execution>
                                <id>default-test</id>
                                <goals>
                                    <goal>test</goal>
                                </goals>
                                <configuration>
                                    <reportNameSuffix>endtoend</reportNameSuffix>
                                    <argLine> -Xms512m -Xmx3072m -XX:MaxPermSize=1024m -XX:-UseSplitVerifier</argLine>
                                    <forkCount>10</forkCount>
        							<reuseForks>true</reuseForks>
                                    <includes>
                                    <include>%regex[(((?!cucumber).)*Test.class)]</include>
                                        <include>%regex[(((?!cucumber).)*TestCase.class)]</include>
                                        <include>%regex[(((?!cucumber).)*.Test.*.class)]</include>
                                        <include>**/Parallel*IT.class</include>
                                    </includes>
                                    <excludedGroups>${integration.test.group},
                                        ${unit.test.group}</excludedGroups>
                                </configuration>
                            </execution>
                            <execution>
                                <id>ignore-tests</id>
                                <goals>
                                    <goal>test</goal>
                                </goals>
                                <configuration>
                                    <dependenciesToScan>
                                        <dependency>com.vanguard:cucumber-inner-source</dependency>
                                    </dependenciesToScan>
                                    <threadCount>1</threadCount>
                                    <reportNameSuffix>ignore</reportNameSuffix>
                                    <argLine> -Xms512m -Xmx3072m -XX:MaxPermSize=256m</argLine>
                                   <includes>
                                        <include>com/vanguard/RunIgnoreCukeTest.class</include>
                                    </includes>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
	    				<groupId>com.github.temyers</groupId>
	    				<artifactId>cucumber-jvm-parallel-plugin</artifactId>
	    				<version>1.2.1</version>
	    				<executions>
	        				<execution>
	            				<id>generateRunners</id>
	            				<phase>validate</phase>
	            				<goals>
	                			<goal>generateRunners</goal>
	            				</goals>
	            <configuration>
	            	<!-- Mandatory -->
          			<!-- comma separated list of package names to scan for glue code -->
	                <glue>${shiftleft.parallel.cucumber.glue}</glue>

					<!-- Where to output the generated tests -->
	                <outputDirectory>${project.build.directory}/generated-test-sources/cucumber</outputDirectory>
	                
	                <!-- The diectory, which must be in the root of the runtime classpath, containing your feature files.  -->
	                <featuresDirectory>src/test/resources/features</featuresDirectory>
	                
	                <!-- Directory where the cucumber report files shall be written  -->
	                <cucumberOutputDir>test-results/cucumber-reports/endtoend</cucumberOutputDir>
	                
	                <!-- comma separated list of output formats -->
	                <format>html,json,junit</format>
	                
	                <!-- CucumberOptions.strict property -->
	                <strict>true</strict>
	                
	                <!-- CucumberOptions.monochrome property -->
	                <monochrome>true</monochrome>
	                
	                <!-- The tags to run, maps to CucumberOptions.tags property -->
	                <tags>${shiftleft.parallel.cucumber.tags}</tags>
	                
	                <!-- If set to true, only feature files containing the required tags shall be generated. -->
         			<!-- Excluded tags (~@notMe) are ignored. -->
	                <filterFeaturesByTags>true</filterFeaturesByTags>
	                
	                <!-- The naming scheme to use for the generated test classes.  One of 'simple' or 'feature-title' --> 
	        		<namingScheme>simple</namingScheme>
	            </configuration>
	        </execution>
	    </executions>
	</plugin>
                </plugins>
            </build>
        </profile>
        <profile>
        	<id>build-breaker</id>
        	<build>
        		<plugins>
			        <plugin>
			                <groupId>org.apache.maven.plugins</groupId>
			                <artifactId>maven-pmd-plugin</artifactId>
			                <version>3.0.1</version>
			                <dependencies>
			                	<dependency>
			                    	<groupId>com.vanguard</groupId>
			                        <artifactId>pmd-blockers</artifactId>
			                        <version>1.0.0.COMMON-PMDBLOC-7</version>
			                 	</dependency>
			                 </dependencies>
			                 <configuration>
			                 	<rulesets>
			                    	<ruleset>com/vanguard/pmd/blockers/rulesets/blocker-rules.xml</ruleset>
			                    </rulesets>
			                    <linkXRef>false</linkXRef>
			                 </configuration>
			                 <executions>
			    		     	<execution>
			        				<goals>
			            				<goal>check</goal>
			        				</goals>
			    				</execution>
							</executions>
			           </plugin>
		           </plugins>
	           </build>
           </profile>
	</profiles>
</project>
